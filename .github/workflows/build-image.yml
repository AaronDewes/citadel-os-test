name: Build Quartz64 Images
on: workflow_dispatch
jobs:
  build_uboot:
    runs-on: ubuntu-22.04
    steps:
      - name: Install toolchain
        run: |
            sudo apt-get update
            sudo apt-get install build-essential crossbuild-essential-arm64 device-tree-compiler
      - name: Clone rkbin repository
        uses: actions/checkout@v3
        with:
          repository: 'rockchip-linux/rkbin'
          path: 'rkbin'
      - name: Clone u-boot repository
        uses: actions/checkout@v3
        with:
          repository: 'CounterPillow/u-boot-quartz64'
          ref: 'deploy'
          path: 'u-boot-quartz64'
      - name: Build u-boot
        run: |
          cd u-boot-quartz64
          make mrproper
          ./make.sh rk3566-quartz64
      - name: Archive u-boot artifacts
        uses: actions/upload-artifact@v3
        with:
          name: u-boot
          path: |
            u-boot-quartz64/rk356x_spl_loader_*.bin
            u-boot-quartz64/uboot.img
            u-boot-quartz64/idblock.bin
  build_kernel:
    runs-on: ubuntu-20.04
    steps:
      - name: Clone workflow repository
        uses: actions/checkout@v3
      - name: Install toolchain
        run: |
            sudo apt-get update
            sudo apt-get install build-essential crossbuild-essential-arm64 device-tree-compiler flex bison
      - name: Clone kernel repository
        uses: actions/checkout@v3
        with:
          repository: 'CounterPillow/linux'
          ref: 'quartz64-deploy'
          path: 'linux'
      - name: Make config
        run: |
          cp config linux/.config
          cd linux
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- olddefconfig
      - name: Build kernel
        run: |
          cd linux
          make -j$(nproc) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- deb-pkg
      - name: Archive kernel artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-kernel
          path: |
            linux-image-*.deb
            linux-libc-dev*.deb
  build_image:
    runs-on: ubuntu-22.04
    needs:
      - build_uboot
      - build_kernel
    env:
      GOPATH: /opt/src/gocode
    steps:
      - name: Clone workflow repository
        uses: actions/checkout@v3
      - name: Download u-boot artifacts
        uses: actions/download-artifact@v3
        with:
          name: u-boot
          path: debos-recipes/u-boot/
      - name: Download kernel artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-kernel
          path: debos-recipes/overlays/linux-kernel/
      - name: Install debos dependencies
        run: |
          sudo apt-get update
          sudo apt-get install golang git libglib2.0-dev libostree-dev \
                               qemu-system-x86 qemu-user-static debootstrap \
                               systemd-container
      - name: Install debos
        run: go install -v github.com/go-debos/debos/cmd/debos@latest
      - name: Build Quartz64 Model A Image
        run: sudo /opt/src/gocode/bin/debos --disable-fakemachine debos-recipes/debian-quartz64a.yaml
      - name: Build Quartz64 Model B Image
        run: sudo /opt/src/gocode/bin/debos --disable-fakemachine debos-recipes/debian-quartz64b.yaml
      - name: Build SOQuartz-CM4 Image
        run: sudo /opt/src/gocode/bin/debos --disable-fakemachine debos-recipes/debian-soquartz-cm4.yaml
      - name: Archive image artifacts
        uses: actions/upload-artifact@v3
        with:
          name: quartz64-images
          path: |
            *.img.xz
